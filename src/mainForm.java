/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenManhCuong
 */
public class mainForm extends javax.swing.JPanel {

    /**
     * Creates new form mainForm
     */
    Connection cnn;// Kết nối CSDL
    Statement stm; // Thực hiện câu lệnh SQL
    ResultSet rs; // Lưu trữ và xử lý dư liệu
    
    private void connect() {
        try {
            cnn = (new DBContext().getConnection());
            System.out.println("Connect Successfully!");
            stm = cnn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        } catch (Exception e) {
            System.out.println("Lỗi connect: " + e.getMessage());
        }
    }
    public mainForm(int option) {
        initComponents();
        if(option==1){
           tabMenu.setSelectedIndex(0); 
        }
        if(option==2){
            tabMenu.setSelectedIndex(1);
        }
    }
    public mainForm() {
        initComponents();
        connect();
        loadtblProduct();
        loadtblCustomer();
        //loadUnit();
        ButtonGroup group = new ButtonGroup();
        group.add(radioMale);
        group.add(radioFemale);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabMenu = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        txtProductCode = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        cboUnit = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        txtCustomerCode = new javax.swing.JTextField();
        btnUpdate2 = new javax.swing.JButton();
        btnDelete2 = new javax.swing.JButton();
        btnReset2 = new javax.swing.JButton();
        btnExit2 = new javax.swing.JButton();
        btnAdd2 = new javax.swing.JButton();
        txtDayofBirth = new javax.swing.JTextField();
        radioMale = new javax.swing.JRadioButton();
        radioFemale = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Information of Product"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Product name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Product code:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Unit:");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Price:");

        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });

        txtProductCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductCodeActionPerformed(evt);
            }
        });

        cboUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "vnd", "do", "yen", "bang anh", "euro" }));
        cboUnit.setToolTipText("");
        cboUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUnitActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 0, 0));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 0, 0));
        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 0, 0));
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 0, 0));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(39, 39, 39)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(btnUpdate)
                                .addGap(26, 26, 26)
                                .addComponent(btnDelete))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(cboUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(jLabel4)))
                        .addGap(39, 39, 39)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnExit)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnReset)
                    .addComponent(btnExit)
                    .addComponent(btnAdd))
                .addContainerGap())
        );

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product code", "Product name", "Unit", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        tabMenu.addTab("Product", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Information of Customer"));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Customer name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Customer code:");
        jLabel6.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Day of Brith");
        jLabel7.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Gender:");

        txtCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNameActionPerformed(evt);
            }
        });

        txtCustomerCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerCodeActionPerformed(evt);
            }
        });

        btnUpdate2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnUpdate2.setForeground(new java.awt.Color(255, 0, 0));
        btnUpdate2.setText("UPDATE");
        btnUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate2ActionPerformed(evt);
            }
        });

        btnDelete2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnDelete2.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete2.setText("DELETE");
        btnDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete2ActionPerformed(evt);
            }
        });

        btnReset2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnReset2.setForeground(new java.awt.Color(255, 0, 0));
        btnReset2.setText("RESET");
        btnReset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset2ActionPerformed(evt);
            }
        });

        btnExit2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnExit2.setForeground(new java.awt.Color(255, 0, 0));
        btnExit2.setText("EXIT");
        btnExit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit2ActionPerformed(evt);
            }
        });

        btnAdd2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnAdd2.setForeground(new java.awt.Color(255, 0, 0));
        btnAdd2.setText("ADD");
        btnAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd2ActionPerformed(evt);
            }
        });

        txtDayofBirth.setText("  /  /");
        txtDayofBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDayofBirthActionPerformed(evt);
            }
        });

        radioMale.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        radioMale.setText("Male");

        radioFemale.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        radioFemale.setText("Female");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Address:");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAdd2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(30, 30, 30)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCustomerCode)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(btnUpdate2))
                                    .addComponent(txtDayofBirth))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(btnDelete2))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(jLabel8)))
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(btnReset2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(119, 119, 119)
                                                .addComponent(radioMale)
                                                .addGap(38, 38, 38)
                                                .addComponent(radioFemale)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel5)
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(82, 82, 82)
                                                .addComponent(btnExit2)))
                                        .addGap(34, 34, 34))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtAddress)
                                .addGap(34, 34, 34))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCustomerCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtDayofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioMale)
                    .addComponent(radioFemale))
                .addGap(52, 52, 52)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate2)
                    .addComponent(btnDelete2)
                    .addComponent(btnReset2)
                    .addComponent(btnExit2)
                    .addComponent(btnAdd2))
                .addContainerGap())
        );

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer code", "Customer name", "Day of Brith", "Genger", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCustomer);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        tabMenu.addTab("Customer", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMenu)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMenu)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed

    private void txtProductCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductCodeActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (checkDuplicate(txtProductCode.getText())) {
            JOptionPane.showMessageDialog(null, "Product don't exist");
        }
        try {
            String unit = cboUnit.getSelectedItem().toString();
            String oddId = oldProductID;
            if (checkPrice(txtPrice.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Price must be a number!");
                return;
            }
//            if (checkDuplicate(txtProductCode.getText()) == false) {
//                JOptionPane.showMessageDialog(null, "Product don't exist");
//                return;
//            }
            String strUPDATE = "";
            if (!txtPrice.getText().isEmpty()) {
                strUPDATE = "UPDATE dbo.tblProduct SET ProductID = '" + txtProductCode.getText() + "',ProductName = '" + txtProductName.getText() + "',Unit ='" + unit + "',Price = '" + Double.parseDouble(txtPrice.getText()) + "' WHERE ProductID = '" + oddId + "'";
            } else {
                strUPDATE = "UPDATE dbo.tblProduct SET  ProductID='" + txtProductCode.getText() + "',ProductName='" + txtProductName.getText() + "',Unit='" + unit + "',Price = NULL WHERE ProductID = '" + oddId + "'";
            }
            stm.execute(strUPDATE);
            JOptionPane.showMessageDialog(null, "UPDATE Successful");
            loadtblProduct();
        } catch (Exception e) {
            System.err.println("Lỗi UPDATE:" + e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            //String unit = cboUnit.getSelectedItem().toString();
            //String oddId = txtProductCode.getText();
//            if (checkPrice(txtPrice.getText()) == false) {
//                JOptionPane.showMessageDialog(null, "Price must be a number!");
//                return;
//            }
            if (checkDuplicate(txtProductCode.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Product don't exist");
                return;
            }
            String strDelete = "DELETE dbo.tblProduct WHERE ProductID = '" + txtProductCode.getText() + "'";
            stm.execute(strDelete);
            JOptionPane.showMessageDialog(null, "DELETE Successful");
            loadtblProduct();
        } catch (Exception e) {
            System.err.println("Lỗi DELETE:" + e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtProductCode.setText("");
        txtProductName.setText("");
        txtPrice.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed
    private boolean checkDuplicate(String code) {
        try {
            String strSelect = "Select * from dbo.tblProduct where Productid='" + code + "'";
            rs = stm.executeQuery(strSelect);
            while (rs.next()) {
                return true;
            }
        } catch (Exception e) {
            System.out.println("Lỗi check dupticate" + e.getMessage());
        }
        return false;
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        // check duplicate
        if (txtProductCode.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Product code not null!");
            return;
        }
        if (txtProductName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Product Name not null!");
            return;
        }
        if (checkDuplicate(txtProductCode.getText()) == true) {
            JOptionPane.showMessageDialog(null, "Product exist!");
            return;
        }
        if (checkPrice(txtPrice.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Price must be a number!");
            return;
        }
        try {
            String unit = cboUnit.getSelectedItem().toString();
            String strInsert = "";
            if (!txtPrice.getText().trim().isEmpty()) {
                strInsert = "INSERT INTO dbo.tblProduct ( ProductID ,ProductName ,Unit ,Price ) VALUES ( '" + txtProductCode.getText() + "' ,N'" + txtProductName.getText() + "' ,'" + unit + "' , '" + Double.parseDouble(txtPrice.getText()) + "'  )";
            } else {
                strInsert = "INSERT INTO dbo.tblProduct ( ProductID ,ProductName ,Unit  ) VALUES ( '" + txtProductCode.getText() + "' ,N'" + txtProductName.getText() + "' ,'" + unit + "'  )";
            }
            stm.execute(strInsert);
            JOptionPane.showMessageDialog(null, "ADD successful");
            loadtblProduct();
        } catch (Exception e) {
            System.err.println("Lỗi add:" + e.getMessage());
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void txtCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerNameActionPerformed

    private void txtCustomerCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerCodeActionPerformed

    private void btnUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate2ActionPerformed
        // TODO add your handling code here:
        if (txtCustomerCode.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer code not null!");
            return;
        }
        if (txtCustomerName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer Name not null!");
            return;
        }
        boolean checkDayofBirth;
        if (txtDayofBirth.getText().trim().isEmpty()) {
            checkDayofBirth = false;
        } else {
            checkDayofBirth = true;
            if (checkDate() == false) {
                JOptionPane.showMessageDialog(null, "Day of date must following format:" + "\n" + "dd/mm/yyyy ");
                return;
            }
        }
        boolean checkAddress;
        if (txtAddress.getText().isEmpty()) {
            checkAddress = false;
        } else {
            checkAddress = true;
        }
        try {
            String customerCode = txtCustomerCode.getText();
            String customerName = txtCustomerName.getText();
            String date = txtDayofBirth.getText();
            String address = txtAddress.getText();
            String gender = "true";
            if (radioFemale.isSelected()) {
                gender = "false";
            }
            if (checkPrice(txtPrice.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Price must be a number!");
                return;
            }
            System.out.println(checkAddress);
            System.out.println(checkDayofBirth);
            String strUPDATE = "";
            if (checkAddress == true && checkDayofBirth == true) {
                strUPDATE = "UPDATE dbo.tblCustomer SET CustomerID ='" + customerCode + "',CustomerName='" + customerName + "',Gender='" + gender + "',Address='" + address + "',Birthdate='" + date + "' WHERE CustomerID = '" + oddCustomerId + "'";
            } else if (checkAddress == true && checkDayofBirth == false) {
                strUPDATE="UPDATE dbo.tblCustomer SET CustomerID ='"+customerCode+"',CustomerName='"+customerName+"',Gender='"+gender+"',Address= '"+address+"',Birthdate=NULL WHERE CustomerID = '"+oddCustomerId+"'";
            } else if (checkAddress == false && checkDayofBirth == true) {
                 strUPDATE ="UPDATE dbo.tblCustomer SET CustomerID ='"+customerCode+"',CustomerName='"+customerName+"',Gender='"+gender+"',Address= NULL,Birthdate= CONVERT(varchar, '"+date+"', 101) WHERE CustomerID = '"+oddCustomerId+"'";
            } else {
                strUPDATE = "UPDATE dbo.tblCustomer SET CustomerID ='" + customerCode + "',CustomerName='" + customerName + "',Gender='" + gender + "',Address= NULL,Birthdate=NULL WHERE CustomerID = '" + oddCustomerId + "'";
            }

            stm.execute(strUPDATE);
            JOptionPane.showMessageDialog(null, "UPDATE Successful");
            loadtblCustomer();
        } catch (Exception e) {
            System.err.println("Lỗi UPDATE:" + e.getMessage());
        }

    }//GEN-LAST:event_btnUpdate2ActionPerformed
    private boolean checkDuplicateCustomerID(String code) {
        try {
            String strSelect = "Select * from dbo.tblCustomer where CustomerID='" + code + "'";
            rs = stm.executeQuery(strSelect);
            while (rs.next()) {
                return true;
            }
        } catch (Exception e) {
            System.out.println("Lỗi check dupticate" + e.getMessage());
        }
        return false;
    }
    private void btnDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete2ActionPerformed

        try {
            if (checkDuplicateCustomerID(txtCustomerCode.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Product don't exist");
                return;
            }
            String strDelete = "DELETE dbo.tblCustomer WHERE CustomerID = '" + txtCustomerCode.getText() + "'";
            stm.execute(strDelete);
            JOptionPane.showMessageDialog(null, "DELETE Successful");
            loadtblCustomer();
        } catch (Exception e) {
            System.err.println("Lỗi DELETE:" + e.getMessage());
        }
    }//GEN-LAST:event_btnDelete2ActionPerformed

    private void btnReset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset2ActionPerformed
        // TODO add your handling code here:
        txtCustomerCode.setText("");
        txtCustomerName.setText("");
        txtAddress.setText("");
        txtDayofBirth.setText("  /   /");
    }//GEN-LAST:event_btnReset2ActionPerformed

    private void btnExit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExit2ActionPerformed

    public boolean checkDate() {
        // check date 
        Pattern pattern = Pattern.compile("\\d{1,2}[/]\\d{1,2}[/]\\d{4}");
        Matcher matcher = pattern.matcher(txtDayofBirth.getText());
        while (matcher.find()) {
            return true;
        }

        return false;
    }
    private void btnAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd2ActionPerformed
        // TODO add your handling code here:
        if (txtCustomerCode.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer code not null!");
            return;
        }
        if (txtCustomerName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Customer Name not null!");
            return;
        }
        if (checkDuplicate(txtCustomerCode.getText()) == true) {
            JOptionPane.showMessageDialog(null, "Customer exist!");
            return;
        }

        String gender = "False";
        if (radioMale.isSelected()) {
            gender = "True";
        }
        boolean checkAddress = true;
        if (txtAddress.getText().isEmpty()) {
            checkAddress = false;
        }
        boolean checkDayofBirth;
        if (txtDayofBirth.getText().trim().isEmpty()) {
            checkDayofBirth = false;
        } else {
            checkDayofBirth = true;
            if (checkDate() == false) {
                JOptionPane.showMessageDialog(null, "Day of date must following format:" + "\n" + "dd/mm/yyyy ");
                return;
            } 
        }
        System.out.println("address:" + checkAddress);
        System.out.println("Date:" + checkDayofBirth);
        try {
            String strInsert = "";
            if (checkAddress == true && checkDayofBirth == true) {
                strInsert = "INSERT INTO dbo.tblCustomer( CustomerID ,CustomerName ,Gender ,Address,Birthdate)\n"
                        + "VALUES  ( '" + txtCustomerCode.getText() + "' , N'" + txtCustomerName.getText() + "' , '" + gender + "' , '" + txtAddress.getText() + "',CONVERT(varchar, '" + txtDayofBirth.getText() + "', 101))";
            } else if (checkAddress == true && checkDayofBirth == false) {
                strInsert = "INSERT INTO dbo.tblCustomer( CustomerID ,CustomerName ,Gender ,Address)\n"
                        + "VALUES  ( '" + txtCustomerCode.getText() + "' , N'" + txtCustomerName.getText() + "' , '" + gender + "' , '" + txtAddress.getText() + "')";
            } else if (checkAddress == false && checkDayofBirth == true) {
                strInsert = "INSERT INTO dbo.tblCustomer( CustomerID ,CustomerName ,Gender ,Birthdate)\n"
                        + "VALUES  ( '" + txtCustomerCode.getText() + "' , N'" + txtCustomerName.getText() + "' , '" + gender + "' ,CONVERT(varchar, '" + txtDayofBirth.getText() + "', 101))";
            } else {
                strInsert = "INSERT INTO dbo.tblCustomer( CustomerID ,CustomerName ,Gender )\n"
                        + "VALUES  ( '" + txtCustomerCode.getText() + "' , N'" + txtCustomerName.getText() + "' , '" + gender + "')";
            }
            stm.execute(strInsert);
            JOptionPane.showMessageDialog(null, "ADD successful");
            loadtblCustomer();
        } catch (Exception e) {
            System.err.println("Lỗi add:" + e.getMessage());
        }
    }//GEN-LAST:event_btnAdd2ActionPerformed

    private void txtDayofBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDayofBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDayofBirthActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed
    String oldProductID = "";
    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        // TODO add your handling code here:
        txtProductCode.setText(tblProduct.getValueAt(tblProduct.getSelectedRow(), 0).toString());
        txtProductName.setText(tblProduct.getValueAt(tblProduct.getSelectedRow(), 1).toString());
        if (tblProduct.getValueAt(tblProduct.getSelectedRow(), 3) == null) {
            txtPrice.setText("");
        } else {
            txtPrice.setText(tblProduct.getValueAt(tblProduct.getSelectedRow(), 3).toString());
        }
        cboUnit.setSelectedItem(tblProduct.getValueAt(tblProduct.getSelectedRow(), 2).toString());
        oldProductID = tblProduct.getValueAt(tblProduct.getSelectedRow(), 0).toString();
    }//GEN-LAST:event_tblProductMouseClicked
    String oddCustomerId = "";
    private void tblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMouseClicked
        // TODO add your handling code here:
        txtCustomerCode.setText(tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 0).toString());
        txtCustomerName.setText(tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 1).toString());
        if (tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 2) == null) {
            txtPrice.setText("  /   /");
        } else {
            txtDayofBirth.setText(tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 2).toString());
        }

        String gender = tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 3).toString();
        if (gender.equalsIgnoreCase("male")) {
            radioMale.setSelected(true);
        } else {
            radioFemale.setSelected(true);
        }
        if (tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 4) == null) {
            txtAddress.setText("");
        } else {
            txtAddress.setText(tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 4).toString());
        }
        oddCustomerId = tblCustomer.getValueAt(tblCustomer.getSelectedRow(), 0).toString();
    }//GEN-LAST:event_tblCustomerMouseClicked

    private void cboUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboUnitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdd2;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete2;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExit2;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset2;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate2;
    private javax.swing.JComboBox<String> cboUnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JTabbedPane tabMenu;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCustomerCode;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtDayofBirth;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductCode;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtm;

    private void loadtblProduct() {
        dtm = (DefaultTableModel) tblProduct.getModel();
        dtm.setRowCount(0);
        try {
            String strSelect = "SELECT ProductID,ProductName,Unit,Price FROM dbo.tblProduct";// Chứa câu lệnh select
            rs = stm.executeQuery(strSelect);
            while (rs.next()) {
                String productID = rs.getString(1);
                String productName = rs.getString(2);
                String unit = rs.getString(3);
                String price = rs.getString(4);
                dtm.insertRow(dtm.getRowCount(), new Object[]{productID, productName, unit, price});
            }
        } catch (Exception e) {
            System.err.println("Lỗi load Product: " + e.getMessage());
        }
    }

    private void loadtblCustomer() {
        dtm = (DefaultTableModel) tblCustomer.getModel();
        dtm.setRowCount(0);
        //Get tất cả dữ liệu phù hợp từ bảng tbl Subject và student về 
        try {
            String strSelect = "SELECT * FROM dbo.tblCustomer";// Chứa câu lệnh select
            rs = stm.executeQuery(strSelect);
            while (rs.next()) { 
                // lấy ra code và name của từng subject
                String code = rs.getString(1);
                String name = rs.getString(2);
                String dayOfBirth = rs.getString(5);
                String dayOfBirth1 =dayOfBirth.substring(0, 10);
                String year = dayOfBirth1.substring(0, 4);
                String month = dayOfBirth1.substring(5, 7);
                String day = dayOfBirth1.substring(8, 10);
                dayOfBirth1=day+"-"+month+"-"+year;
                String gender = "Male";
                if (!rs.getBoolean(3)) {
                    gender = "Female";
                }
                String address = rs.getString(4);
                // insert vào tbSubject trên form
                dtm.insertRow(dtm.getRowCount(), new Object[]{code, name, dayOfBirth1, gender, address});
            }
        } catch (Exception e) {
            System.out.println("Lỗi load Customer" + e.getMessage());
        }
    }
    //Hashtable<String, String> map = new Hashtable<String, String>();

    private void loadUnit() {
        try {
            String strSelect = "select*from tblProduct";// Chứa câu lệnh select
            rs = stm.executeQuery(strSelect);
            while (rs.next()) {
                // lấy ra code và name của từng subject
                String unitname = rs.getString(3);
                String productid = rs.getString(1);
                // insert vào tblProduct trên form
                //map.put(unitname, productid);
                cboUnit.addItem(unitname);
            }
        } catch (Exception e) {
            System.out.println("Lỗi load Unit" + e.getMessage());
        }
    }

    private boolean checkPrice(String str) {
        for (int i = 0; i < str.length(); i++) {
            if (Character.isLetter(str.charAt(i))) {
                return false;
            }
        }
        return true;
    }

}
